[Order, Split]

Story.
First, how do the built-in .NET copy methods compare?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | Array.Copy                           |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | Buffer.BlockCopy                     |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | Buffer.MemoryCopy                    |  12.7 GB/s |  17.0 GB/s |  18.2 GB/s |  19.0 GB/s |   18.0 GB/s |
 | Unsafe.CopyBlock                     |  12.7 GB/s |  17.0 GB/s |  18.1 GB/s |  19.1 GB/s |   18.0 GB/s |
 | Unsafe.CopyBlockUnaligned            |  12.7 GB/s |  17.0 GB/s |  18.1 GB/s |  19.0 GB/s |   18.0 GB/s |
 | AsSpan.Copy                          |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.6 GB/s |   18.0 GB/s |

On .NET 5.0, performance is all identical. All perform best with 8 threads (on my 8 cores), though you get almost 90% of peak speeds with only two threads. These results are about in line with the benchmarks. If I measure only for one second each, I see nearly 20 GB/s for some results.

How do these compare to P/Invoke to memcpy?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | Memcpy                               |  11.5 GB/s |  16.3 GB/s |  18.0 GB/s |  19.0 GB/s |   18.2 GB/s |

They're a bit faster than memcpy for one and two threads, with the same peak.

How does this compare to a normal for loop over each byte?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | For Byte                             |  1.95 GB/s |  3.79 GB/s |  7.04 GB/s |  10.3 GB/s |   9.59 GB/s |

Byte-by-byte copy is drastically slower. What about if I copy eight bytes at a time by treating the array as a long[], either with Unsafe.AsLong or by casting pointer types in an unsafe code block?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | For Unsafe.AsLong                    |  7.83 GB/s |  10.3 GB/s |  10.5 GB/s |  10.5 GB/s |   9.70 GB/s |
 | Unsafe For Long                      |  7.43 GB/s |  9.89 GB/s |  10.5 GB/s |  10.5 GB/s |   9.73 GB/s |
 | Unsafe While Long                    |  7.41 GB/s |  10.1 GB/s |  10.4 GB/s |  10.5 GB/s |   9.76 GB/s |

These methods are all almost 4x faster with one thread. They all have the same peak as per-byte copy at about 10.5 GB/s, though these implementations almost max out with just two threads.

How about using AVX intrinsics to copy 16 or 32 bytes at a time? Is that faster?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | Avx128_LoadStore                     |  8.81 GB/s |  10.6 GB/s |  10.8 GB/s |  10.5 GB/s |   9.64 GB/s |
 | Avx256_LoadStore                     |  8.73 GB/s |  10.6 GB/s |  10.5 GB/s |  10.5 GB/s |   9.66 GB/s |

For a single-threaded copy, yes, this provides about a 15% speedup, but with the same speed limit.

So why the slower peak speeds for all of these? The slowdown is because these methods are not using something called a "non-temporal store". Normally, the CPU assumes that you will use newly written values almost immediately, so it writes them to the CPU caches and then to memory. However, the CPU doesn't cache 8 bytes at a time - it reads 64 byte blocks into the cache. In order to update your 8 bytes, the CPU has to read a 64-byte cache line, overwrite the 8 bytes you're updating, and then write it back. This means the copying is actually turning into two reads and a write to memory, so we lose about 1/3 of our potential performance.

Fortunately, .NET exposes some very low-level operations in the System.Runtime.Intrinsics namespaces, and non-temporal stores are almong them. How do those perform?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | StoreNonTemporalInt                  |  9.01 GB/s |  13.8 GB/s |  17.3 GB/s |  18.1 GB/s |   17.4 GB/s |
 | StoreNonTemporalLong                 |  10.8 GB/s |  15.4 GB/s |  17.8 GB/s |  18.5 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal              |  7.19 GB/s |  12.8 GB/s |  17.6 GB/s |  18.2 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal              |  10.3 GB/s |  14.1 GB/s |  17.0 GB/s |  18.4 GB/s |   17.5 GB/s |

These options have slightly faster single threaded behavior, but the much bigger difference is that the maximum performance we see is now much closer to the 19.0 GB/s limit the built-in methods are able to hit. Interestingly, Sse2.X64.StoreNonTemporal(long*, long) was the standout performer, particularly for one and two threads.

Now, does unrolling these loops (reading and writing more than once per loop iteration) provide further speedups?

 | Method [.NET 5.0.2, ZEPHYRUS]        | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | StoreNonTemporalLong                 |  10.8 GB/s |  15.4 GB/s |  17.8 GB/s |  18.5 GB/s |   17.5 GB/s |
 | StoreNonTemporalLong_Unrolled2       |  11.0 GB/s |  15.3 GB/s |  17.8 GB/s |  18.4 GB/s |   17.5 GB/s |
 | StoreNonTemporalLong_Unrolled4       |  11.0 GB/s |  15.3 GB/s |  17.8 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx128_StoreNonTemporal              |  7.19 GB/s |  12.8 GB/s |  17.6 GB/s |  18.2 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2    |  9.90 GB/s |  14.7 GB/s |  17.8 GB/s |  18.3 GB/s |   17.4 GB/s |
 | Avx128_StoreNonTemporal_Unrolled4    |  10.7 GB/s |  15.1 GB/s |  17.8 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal              |  10.3 GB/s |  14.1 GB/s |  17.0 GB/s |  18.4 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled2    |  11.0 GB/s |  15.2 GB/s |  17.6 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled4    |  11.3 GB/s |  15.3 GB/s |  17.7 GB/s |  18.3 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled8    |  12.5 GB/s |  16.6 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled16   |  12.5 GB/s |  16.8 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |

Unrolling helps the AVX options when running one and two threaded. A highly unrolled AVX256 copy is the fastest hand-coded option, and is very close to the built-in method performance.

So, what are my conclusions?
* The built-in methods are great, at least for large copies.
* They all perform equally on .NET 5.0.
* The C# built-ins are comparable to memcpy and to memory benchmarks.
* You'll see best performance with as many threads as you have physical cores.
* You get nearly peak performance from just two threads (at least on my Ryzen 4900 HS and i7-7500 machines).

If you need to write a very fast hand-coded copy (like a decompression loop), StoreNonTemporal(long*, long) or Avx.StoreAlignedNonTemporal(byte*, Vector256<byte>) are your best options, and you really want the code to run on at least two parallel threads.

Bonus Content! How do these findings hold up on an Intel CPU? What about older runtimes?

Running Copy Performance Tests [.NET 5.0.2 on BEAST]...

 | Method                               | Speed [1T] | Speed [2T] | Speed [4T] |
 | ------------------------------------ | ---------: | ---------: | ---------: |
 | ArrayCopy                            |  9.45 GB/s |  11.5 GB/s |  12.0 GB/s |
 | BufferBlockCopy                      |  9.51 GB/s |  11.6 GB/s |  12.0 GB/s |
 | AsSpanCopy                           |  9.47 GB/s |  11.6 GB/s |  12.0 GB/s |
 | UnsafeCopyBlock                      |  9.68 GB/s |  11.8 GB/s |  12.0 GB/s |
 | UnsafeCopyBlockUnaligned             |  9.71 GB/s |  11.8 GB/s |  12.0 GB/s |
 | BufferMemoryCopy                     |  9.67 GB/s |  11.9 GB/s |  12.1 GB/s |
 | Memcpy                               |  14.1 GB/s |  14.6 GB/s |  13.3 GB/s |

 | UnsafeForLong                        |  7.45 GB/s |  10.3 GB/s |  9.76 GB/s |
 | UnsafeWhileLong                      |  9.02 GB/s |  10.4 GB/s |  9.84 GB/s |
 | Avx128_LoadStore                     |  9.91 GB/s |  10.7 GB/s |  9.98 GB/s |
 | Avx256_LoadStore                     |  10.2 GB/s |  10.6 GB/s |  10.0 GB/s |
 | StoreNonTemporalInt                  |  8.65 GB/s |  14.1 GB/s |  14.4 GB/s |
 | StoreNonTemporalLong                 |  13.0 GB/s |  15.0 GB/s |  14.2 GB/s |
 | StoreNonTemporalLong_Unrolled2       |  13.6 GB/s |  14.8 GB/s |  13.9 GB/s |
 | StoreNonTemporalLong_Unrolled4       |  13.7 GB/s |  15.1 GB/s |  14.1 GB/s |
 | Avx128_StoreNonTemporal              |  6.91 GB/s |  13.6 GB/s |  14.5 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2    |  10.8 GB/s |  15.2 GB/s |  14.4 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2v2  |  10.7 GB/s |  15.2 GB/s |  14.4 GB/s |
 | Avx128_StoreNonTemporal_Unrolled4v2  |  12.6 GB/s |  15.2 GB/s |  14.4 GB/s |
 | Avx256_StoreNonTemporal              |  12.4 GB/s |  15.3 GB/s |  14.3 GB/s |
 | Avx256_StoreNonTemporal_Unrolled2v2  |  14.5 GB/s |  15.3 GB/s |  14.3 GB/s |
 | Avx256_StoreNonTemporal_Unrolled4v2  |  14.7 GB/s |  15.3 GB/s |  14.3 GB/s |
 | Avx256_StoreNonTemporal_Unrolled8v2  |  14.4 GB/s |  15.0 GB/s |  14.0 GB/s |
 | Avx256_StoreNonTemporal_Unrolled16v2 |  14.4 GB/s |  15.0 GB/s |  14.0 GB/s |

Running Copy Performance Tests [.NET 5.0.2 on ZEPHYRUS]...

 | Method                               | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | ArrayCopy                            |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | BufferBlockCopy                      |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | AsSpanCopy                           |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.6 GB/s |   18.0 GB/s |
 | UnsafeCopyBlock                      |  12.7 GB/s |  17.0 GB/s |  18.1 GB/s |  19.1 GB/s |   18.0 GB/s |
 | UnsafeCopyBlockUnaligned             |  12.7 GB/s |  17.0 GB/s |  18.1 GB/s |  19.0 GB/s |   18.0 GB/s |
 | ForByte                              |  1.95 GB/s |  3.79 GB/s |  7.04 GB/s |  10.3 GB/s |   9.59 GB/s |
 | ForUnsafeAsLong                      |  7.83 GB/s |  10.3 GB/s |  10.5 GB/s |  10.5 GB/s |   9.70 GB/s |
 | BufferMemoryCopy                     |  12.7 GB/s |  17.0 GB/s |  18.2 GB/s |  19.0 GB/s |   18.0 GB/s |
 | Memcpy                               |  11.5 GB/s |  16.3 GB/s |  18.0 GB/s |  19.0 GB/s |   18.2 GB/s |
 | UnsafeForLong                        |  7.43 GB/s |  9.89 GB/s |  10.5 GB/s |  10.5 GB/s |   9.73 GB/s |
 | UnsafeWhileLong                      |  7.41 GB/s |  10.1 GB/s |  10.4 GB/s |  10.5 GB/s |   9.76 GB/s |
 | Avx128_LoadStore                     |  8.81 GB/s |  10.6 GB/s |  10.8 GB/s |  10.5 GB/s |   9.64 GB/s |
 | Avx256_LoadStore                     |  8.73 GB/s |  10.6 GB/s |  10.5 GB/s |  10.5 GB/s |   9.66 GB/s |
 | StoreNonTemporalInt                  |  9.01 GB/s |  13.8 GB/s |  17.3 GB/s |  18.1 GB/s |   17.4 GB/s |
 | StoreNonTemporalLong                 |  10.8 GB/s |  15.4 GB/s |  17.8 GB/s |  18.5 GB/s |   17.5 GB/s |
 | StoreNonTemporalLong_Unrolled2       |  11.0 GB/s |  15.3 GB/s |  17.8 GB/s |  18.4 GB/s |   17.5 GB/s |
 | StoreNonTemporalLong_Unrolled4       |  11.0 GB/s |  15.3 GB/s |  17.8 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx128_StoreNonTemporal              |  7.19 GB/s |  12.8 GB/s |  17.6 GB/s |  18.2 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2    |  9.65 GB/s |  14.9 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2v2  |  9.90 GB/s |  14.7 GB/s |  17.8 GB/s |  18.3 GB/s |   17.4 GB/s |
 | Avx128_StoreNonTemporal_Unrolled4v2  |  10.7 GB/s |  15.1 GB/s |  17.8 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal              |  10.3 GB/s |  14.1 GB/s |  17.0 GB/s |  18.4 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled2v2  |  11.0 GB/s |  15.2 GB/s |  17.6 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled4v2  |  11.3 GB/s |  15.3 GB/s |  17.7 GB/s |  18.3 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled8v2  |  12.5 GB/s |  16.6 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled16v2 |  12.5 GB/s |  16.8 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |


Running Copy Performance Tests [.NET Core 3.1.11 on ZEPHYRUS]...

 | Method                               | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | ArrayCopy                            |  12.7 GB/s |  16.9 GB/s |  18.1 GB/s |  18.9 GB/s |   18.0 GB/s |
 | BufferBlockCopy                      |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | AsSpanCopy                           |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | UnsafeCopyBlock                      |  12.7 GB/s |  17.0 GB/s |  18.1 GB/s |  19.0 GB/s |   18.0 GB/s |
 | UnsafeCopyBlockUnaligned             |  12.7 GB/s |  17.0 GB/s |  18.2 GB/s |  19.0 GB/s |   18.0 GB/s |
 | ForByte                              |  2.00 GB/s |  3.92 GB/s |  7.39 GB/s |  9.99 GB/s |   9.59 GB/s |
 | ForUnsafeAsLong                      |  7.86 GB/s |  10.1 GB/s |  10.5 GB/s |  10.5 GB/s |   9.65 GB/s |
 | BufferMemoryCopy                     |  12.7 GB/s |  16.9 GB/s |  18.2 GB/s |  18.9 GB/s |   18.0 GB/s |
 | Memcpy                               |  11.5 GB/s |  16.8 GB/s |  18.0 GB/s |  18.9 GB/s |   18.2 GB/s |
 | UnsafeForLong                        |  7.92 GB/s |  10.3 GB/s |  10.5 GB/s |  10.5 GB/s |   9.69 GB/s |
 | UnsafeWhileLong                      |  7.96 GB/s |  10.4 GB/s |  10.5 GB/s |  10.5 GB/s |   9.70 GB/s |
 | Avx128_LoadStore                     |  8.75 GB/s |  10.6 GB/s |  10.5 GB/s |  10.5 GB/s |   9.65 GB/s |
 | Avx256_LoadStore                     |  8.92 GB/s |  10.7 GB/s |  10.6 GB/s |  10.5 GB/s |   9.67 GB/s |
 | StoreNonTemporalInt                  |  9.17 GB/s |  13.7 GB/s |  17.2 GB/s |  17.9 GB/s |   17.4 GB/s |
 | StoreNonTemporalLong                 |  10.8 GB/s |  15.2 GB/s |  17.8 GB/s |  18.4 GB/s |   17.5 GB/s |
 | StoreNonTemporalLong_Unrolled2       |  11.0 GB/s |  15.2 GB/s |  17.8 GB/s |  18.4 GB/s |   17.6 GB/s |
 | StoreNonTemporalLong_Unrolled4       |  10.9 GB/s |  15.2 GB/s |  17.7 GB/s |  18.4 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal              |  7.02 GB/s |  13.0 GB/s |  17.1 GB/s |  18.1 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2    |  9.50 GB/s |  14.8 GB/s |  17.7 GB/s |  18.3 GB/s |   17.5 GB/s |
 | Avx128_StoreNonTemporal_Unrolled2v2  |  9.53 GB/s |  13.3 GB/s |  17.0 GB/s |  18.3 GB/s |   17.4 GB/s |
 | Avx128_StoreNonTemporal_Unrolled4v2  |  10.7 GB/s |  14.9 GB/s |  17.7 GB/s |  18.4 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal              |  10.3 GB/s |  15.2 GB/s |  17.6 GB/s |  18.3 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled2v2  |  11.1 GB/s |  15.6 GB/s |  17.7 GB/s |  18.4 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled4v2  |  11.2 GB/s |  15.9 GB/s |  17.7 GB/s |  18.3 GB/s |   17.6 GB/s |
 | Avx256_StoreNonTemporal_Unrolled8v2  |  12.5 GB/s |  16.7 GB/s |  17.5 GB/s |  18.3 GB/s |   17.5 GB/s |
 | Avx256_StoreNonTemporal_Unrolled16v2 |  12.4 GB/s |  16.7 GB/s |  17.7 GB/s |  18.3 GB/s |   17.5 GB/s |

Running Copy Performance Tests [.NET Core 4.6.29518.01 (2.1) on ZEPHYRUS]...

 | Method                   | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | ArrayCopy                |  12.7 GB/s |  17.1 GB/s |  18.2 GB/s |  19.0 GB/s |   18.0 GB/s |
 | BufferBlockCopy          |  6.93 GB/s |  9.92 GB/s |  11.2 GB/s |  11.0 GB/s |   10.5 GB/s |
 | UnsafeCopyBlock          |  6.96 GB/s |  9.89 GB/s |  11.3 GB/s |  11.1 GB/s |   10.5 GB/s |
 | UnsafeCopyBlockUnaligned |  6.95 GB/s |  9.92 GB/s |  11.3 GB/s |  11.1 GB/s |   10.5 GB/s |
 | ForByte                  |  1.99 GB/s |  3.94 GB/s |  7.45 GB/s |  10.2 GB/s |   9.16 GB/s |
 | ForUnsafeAsLong          |  7.72 GB/s |  10.0 GB/s |  10.6 GB/s |  10.5 GB/s |   9.70 GB/s |
 | BufferMemoryCopy         |  12.7 GB/s |  17.0 GB/s |  18.2 GB/s |  19.0 GB/s |   18.0 GB/s |
 | Memcpy                   |  11.8 GB/s |  16.7 GB/s |  18.1 GB/s |  19.0 GB/s |   18.1 GB/s |
 | UnsafeForLong            |  7.88 GB/s |  10.3 GB/s |  10.4 GB/s |  10.5 GB/s |   9.71 GB/s |
 | UnsafeWhileLong          |  7.85 GB/s |  10.3 GB/s |  10.3 GB/s |  10.5 GB/s |   9.72 GB/s |

Running Copy Performance Tests [.NET Core 4.6.27618.02 (1.1) on ZEPHYRUS]...

 | Method                   | Speed [1T] | Speed [2T] | Speed [4T] | Speed [8T] | Speed [16T] |
 | ------------------------ | ---------: | ---------: | ---------: | ---------: | ----------: |
 | ArrayCopy                |  12.7 GB/s |  17.0 GB/s |  17.7 GB/s |  18.7 GB/s |   17.8 GB/s |
 | BufferBlockCopy          |  12.7 GB/s |  17.1 GB/s |  18.2 GB/s |  18.7 GB/s |   17.8 GB/s |
 | UnsafeCopyBlock          |  10.9 GB/s |  15.2 GB/s |  17.4 GB/s |  18.1 GB/s |   17.7 GB/s |
 | UnsafeCopyBlockUnaligned |  11.0 GB/s |  15.2 GB/s |  17.3 GB/s |  18.1 GB/s |   17.7 GB/s |
 | ForByte                  |  2.00 GB/s |  3.98 GB/s |  7.18 GB/s |  9.83 GB/s |   9.64 GB/s |
 | ForUnsafeAsLong          |  7.81 GB/s |  10.2 GB/s |  10.6 GB/s |  10.5 GB/s |   9.69 GB/s |
 | BufferMemoryCopy         |  12.7 GB/s |  17.1 GB/s |  18.2 GB/s |  18.6 GB/s |   17.9 GB/s |
 | Memcpy                   |  11.8 GB/s |  16.5 GB/s |  18.0 GB/s |  18.8 GB/s |   18.0 GB/s |
 | UnsafeForLong            |  7.94 GB/s |  10.2 GB/s |  10.5 GB/s |  10.5 GB/s |   9.74 GB/s |
 | UnsafeWhileLong          |  7.85 GB/s |  10.3 GB/s |  10.5 GB/s |  10.5 GB/s |   9.56 GB/s |
